name: Auto PR develop → main

on:
  push:
    branches:
      - develop

permissions:
  contents: read
  pull-requests: write

jobs:
  sync-develop-to-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: develop

      - name: Fetch main for comparison
        run: git fetch origin main

      - name: Check if there are changes between develop and main
        id: diff
        run: |
          if git diff --quiet origin/main HEAD; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create or update PR develop → main
        if: steps.diff.outputs.changed == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: auto/develop-to-main   # rolling PR branch
          title: "Sync develop → main"
          body: |
            This pull request was automatically created to merge the latest `develop` into `main`.
            It will auto-update whenever `develop` changes.
          commit-message: "chore: sync develop → main"
          labels: automated

      - name: Enable auto-merge on PR (GraphQL API)
        if: steps.cpr.outputs.pull-request-number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          REPO: ${{ github.repository }}
        run: |
          echo "Fetching node ID for PR #$PR_NUMBER"
          PR_NODE_ID=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v4+json" \
            -X POST https://api.github.com/graphql \
            -d "{ \"query\": \"{ repository(owner: \\\"${REPO%/*}\\\", name: \\\"${REPO#*/}\\\") { pullRequest(number: $PR_NUMBER) { id } } }\" }" \
            | jq -r '.data.repository.pullRequest.id')

          if [ "$PR_NODE_ID" != "null" ]; then
            echo "Enabling auto-merge on PR node $PR_NODE_ID"
            curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v4+json" \
              -X POST https://api.github.com/graphql \
              -d "{ \"query\": \"mutation { enablePullRequestAutoMerge(input: { pullRequestId: \\\"$PR_NODE_ID\\\", mergeMethod: MERGE }) { clientMutationId } }\" }"
          else
            echo "Failed to get PR node ID, skipping auto-merge"
          fi
